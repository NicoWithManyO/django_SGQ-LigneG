# Generated by Django 5.2.4 on 2025-01-27 06:48

from django.db import migrations


def migrate_production_data_to_trs(apps, schema_editor):
    """
    Copie les données de production depuis Shift vers TRS.
    Crée un objet TRS s'il n'existe pas déjà.
    """
    Shift = apps.get_model('production', 'Shift')
    TRS = apps.get_model('wcm', 'TRS')
    
    for shift in Shift.objects.all():
        # Vérifier si un TRS existe déjà pour ce shift
        try:
            trs = TRS.objects.get(shift=shift)
            # Mettre à jour les valeurs
            trs.total_length = shift.total_length
            trs.ok_length = shift.ok_length
            trs.nok_length = shift.nok_length
            trs.raw_waste_length = shift.raw_waste_length
            trs.save()
        except TRS.DoesNotExist:
            # Créer un TRS minimal avec les données de production
            # Note: Les autres champs TRS devront être recalculés si nécessaire
            TRS.objects.create(
                shift=shift,
                # Temps - valeurs par défaut
                opening_time='08:00:00',  # 8 heures par défaut
                availability_time=shift.availability_time or '08:00:00',
                lost_time=shift.lost_time or '00:00:00',
                # Production - copie depuis shift
                total_length=shift.total_length,
                ok_length=shift.ok_length,
                nok_length=shift.nok_length,
                raw_waste_length=shift.raw_waste_length,
                # Métriques - valeurs par défaut qui devront être recalculées
                trs_percentage=0,
                availability_percentage=0,
                performance_percentage=0,
                quality_percentage=0,
                theoretical_production=0,
                # Profil - valeurs par défaut
                profile_name='Non défini',
                belt_speed_m_per_min=5.0
            )


def reverse_migration(apps, schema_editor):
    """
    Copie les données de TRS vers Shift (pour rollback).
    """
    Shift = apps.get_model('production', 'Shift')
    TRS = apps.get_model('wcm', 'TRS')
    
    for trs in TRS.objects.all():
        shift = trs.shift
        shift.total_length = trs.total_length
        shift.ok_length = trs.ok_length
        shift.nok_length = trs.nok_length
        shift.raw_waste_length = trs.raw_waste_length
        shift.save()


class Migration(migrations.Migration):

    dependencies = [
        ('production', '0001_initial'),
        ('wcm', '0002_trs'),
    ]

    operations = [
        migrations.RunPython(
            migrate_production_data_to_trs,
            reverse_migration
        ),
    ]